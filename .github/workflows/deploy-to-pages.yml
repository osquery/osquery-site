#
# Copyright (c) 2014-present, The osquery authors
#
# This source code is licensed as defined by the LICENSE file found in the
# root directory of this source tree.
#
# SPDX-License-Identifier: (Apache-2.0 OR GPL-2.0-only)
#
name: Deploy to GitHub Pages

on:
  push:
    branches: ["main", "source"]
  workflow_dispatch:

env:
  NODE_CACHE_VERSION: 1

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    # Caching. As recommended by the github action
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache yarn cache
      uses: actions/cache@v4
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    # Caching node_modules is not always recommended. But our usage is fairly minimal, and yarn is slow.
    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: v${{env.NODE_CACHE_VERSION}}-${{ runner.os }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          v${{env.NODE_CACHE_VERSION}}-${{ runner.os }}-nodemodules-

    - name: Install modules
      run: yarn --prefer-offline

    - name: Build
      run: yarn build
      env:
        # our bundle is too big. So we have to skip warnings here
        CI: false

    - name: Test
      run: yarn test

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./build

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
